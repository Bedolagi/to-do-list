package menu

import (
	"bufio"
	"fmt"
	"os"
	"os/exec"
	"runtime"
	"to-do-list/internal/task"

	"github.com/eiannone/keyboard"
)

var MenuText map[int]string = make(map[int]string)
var Choice int
var availableID int

func Init() {
	MenuText[0] = "1. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"
	MenuText[1] = "2. –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É"
	MenuText[2] = "3. –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"
}

func DisplayMenu() {
	fmt.Println("üìù To-Do Listüìù")
	fmt.Println("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ –º–µ–Ω—é.\n–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ ENTER")
	for i := 0; i < len(MenuText); i++ {
		if Choice != i {
			fmt.Printf("%v\n", MenuText[i])
		} else {
			fmt.Printf("%v %v\n", "‚û°Ô∏è ", MenuText[i])
		}
	}
}

func Select() {
	switch Choice {
	case 0:
		var taskName string
		fmt.Print("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:")
		scanner := bufio.NewScanner(os.Stdin)
		scanner.Scan()
		taskName = scanner.Text()

		task.List[availableID] = task.NewTask(taskName, false)
		availableID++
	case 1:
		var selectTask int
		fmt.Println("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–¥–∞—á–∏:")
		fmt.Scanln(&selectTask)
		task.List[selectTask-1].ChangeState()
	case 2:
		var idTask int
		fmt.Println("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–¥–∞—á–∏:")
		fmt.Scanln(&idTask)
		delete(task.List, idTask-1)
		fmt.Println("–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞!")
	}
}

func ClearConsole() {
	switch runtime.GOOS {
	case "windows":
		cmd := exec.Command("cmd", "/c", "cls")
		cmd.Stdout = os.Stdout
		cmd.Run()
	default:
		fmt.Print("\033[H\033[2J")
	}
}

func Start() {
	for {
		ClearConsole()
		task.DisplayTasks()
		DisplayMenu()

		_, key, _ := keyboard.GetKey()

		switch key {
		case keyboard.KeyArrowUp:
			if Choice > 0 {
				Choice--
			}
		case keyboard.KeyArrowDown:
			if Choice < len(MenuText)-1 {
				Choice++
			}
		case keyboard.KeyEnter:
			Select()
		}
	}
}
